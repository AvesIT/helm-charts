## Default values for mailu.

## @section Global parameters
## Global common parameters (see Bitnamis common chart)
## @param global.imageRegistry Global container image registry
## @param global.imagePullSecrets Global container image pull secret
## @param global.storageClass Global storageClass to use for persistent volumes
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
kubeVersion: ""
## @param nameOverride String to partially override mailu.fullname include (will maintain the release name)
nameOverride: ""
## @param fullnameOverride String to fully override mailu.fullname template
fullnameOverride: ""
## @param commonLabels Add labels to all the deployed resources
commonLabels: {}
## @param commonAnnotations Add annotations to all the deployed resources
commonAnnotations: {}

## @section Mailu parameters

## e.g.:
## hostnames:
##   - mail.example.com
##   - imap.example.com
## @param hostnames List of hostnames to generate certificates and ingresses for. The first will be used as primary mail hostname
hostnames: []

## e.g.:
## domain: example.com
## @param domain Mail domain name. See https://github.com/Mailu/Mailu/blob/master/docs/faq.rst#what-is-the-difference-between-domain-and-hostnames
domain: ""

## e.g.:
## secretKey: chang3m3!
## @param secretKey The secret key is required for protecting authentication cookies and must be set individually for each deployment
## If empty, a random secret key will be generated and saved in a secret
secretKey: ""

## e.g.:
## existingSecret: mailu-secret
## @param existingSecret Name of the existing secret to retrieve the secretKey.
## The secret has to contain the secretKey value under the `secret-key` key.
existingSecret: ""

## e.g.:
## initialAccount:
##   username: mailadmin
##   domain: mydomain.com
##   password: chang3m3!
#
## An existing secret can be used to retrieve the initial account's password. For that, set the secret name in 'initialAccount.existingSecret'.
## The secret needs to contain the password under the 'initial-account-password' key.
## If the a value is also set under 'initialAccount.password', that password will be taken.
## e.g.:
## initialAccount:
##   existingSecret: mailu-secret
## @param initialAccount An initial account can automatically be created:
initialAccount: {}

## @param subnet Change this if you're using different address ranges for pods
subnet: 10.42.0.0/16

## @param mailuVersion Version/tag of mailu images - must be master or a version >= 1.9
mailuVersion: 1.9.26

## @param logLevel default log level. can be overridden globally or per service
logLevel: WARNING

## @param postmaster local part of the postmaster email address (Mailu will use @$DOMAIN as domain part)
postmaster: postmaster

mail:
  ## @param mail.messageSizeLimitInMegabytes Maximum size of an email in megabytes
  messageSizeLimitInMegabytes: 50

  ## Configuration to prevent brute-force attacks. See the documentation for further information: https://mailu.io/master/configuration.html
  ## @param mail.authRatelimit.ip Sets the `AUTH_RATELIMIT_IP` environment variable in the `admin` pod
  ## @param mail.authRatelimit.ipv4Mask Sets the `AUTH_RATELIMIT_IP_V4_MASK` environment variable in the `admin` pod
  ## @param mail.authRatelimit.ipv6Mask Sets the `AUTH_RATELIMIT_IP_V6_MASK` environment variable in the `admin` pod
  ## @param mail.authRatelimit.user Sets the `AUTH_RATELIMIT_USER` environment variable in the `admin` pod
  ## @param mail.authRatelimit.exemptionLength Sets the `AUTH_RATELIMIT_EXEMPTION_LENGTH` environment variable in the `admin` pod
  ## @param mail.authRatelimit.exemption Sets the `AUTH_RATELIMIT_EXEMPTION` environment variable in the `admin` pod
  authRatelimit:
    ip: 60/hour
    ipv4Mask: 24
    ipv6Mask: 56
    user: 100/day
    exemptionLength: 86400
    exemption: ""

  # Configuration to reduce outgoing spam in case of a compromised account. See the documentation for further information: https://mailu.io/1.9/configuration.html?highlight=MESSAGE_RATELIMIT
  ## @param mail.messageRatelimit.value Sets the `MESSAGE_RATELIMIT` environment variable in the `admin` pod
  ## @param mail.messageRatelimit.exemption Sets the `MESSAGE_RATELIMIT_EXEMPTION` environment variable in the `admin` pod
  messageRatelimit:
    value: 200/day
    exemption: ""

## @param external_relay Mailu external relay configuration
## Example:
##  external_relay:
##    host: "[domain.tld]:port"
##    username: username
##    password: SECRET
##    # username and password can also be stored as secret:
##    secretName: external-relay-secret
##    usernameKey: username
##    passwordKey: password
## @param external_relay.host Hostname of the external relay
## @param external_relay.username Username for the external relay
## @param external_relay.password Password for the external relay
## @param external_relay.secretName Name of the secret containing the username and password for the external relay; if set, username and password will be ignored
## @param external_relay.usernameKey Key in the secret containing the username for the external relay
## @param external_relay.passwordKey Key in the secret containing the password for the external relay
external_relay:
  host: ""
  username: ""
  password: ""
  secretName: ""
  usernameKey: "relay-username"
  passwordKey: "relay-password"

## @param clusterDomain Kubernetes cluster domain name
clusterDomain: cluster.local

## nodeSelector: {}

## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
## @param tolerations Tolerations for pod assignment
tolerations: []

## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## @param affinity Affinity for pod assignment
affinity: {}

## @section Storage parameters

database:
  ## @param database.type type of the database for mailu (sqlite/mysql/postgresql)
  ## default database is an embedded sqlite
  ## for mysql, see settings below
  type: sqlite

  ## @param database.roundcube.type type of the database for roundcube (sqlite/mysql/postgresql)
  ## default database is an embedded sqlite
  ## for mysql, see settings below
  ## @param database.roundcube.database Name of the roundcube database
  ## @param database.roundcube.username Username to use for the roundcube database
  ## @param database.roundcube.password Password to use for the roundcube database
  roundcube:
    type: sqlite
    database: roundcube
    username: roundcube
    password: changeme

  ## @param database.mysql For 'mysql' type (or mariadb) use the following config:
  ## You can set the 'host' value to use an external database.
  ## If the 'host' value is not set, a database instance is created by this chart.
  ## e.g.:
  ## mysql:
  ##   host: external-db-hostname
  ##   # root password for mysql database, only used for embedded mysql
  ##   rootPassword: chang3m3!
  ##
  ##   # Settings for mailu database
  ##   database: mailu
  ##   user: mailu
  ##   password: chang3m3!
  ##
  ##   # Settings for roundcube database
  ##   roundcubeDatabase: roundcube
  ##   roundcubeUser: roundcube
  ##   roundcubePassword: chang3m3!
  ##
  ##   existingSecret: mail-mysql
  mysql: {}

  ## @param database.postgresql For an external PostgreSQL database, use the following config:
  ## e.g.:
  ## postgresql:
  ##   host: external-db-hostname
  ##   # Settings for mailu database
  ##   database: mailu
  ##   user: mailu
  ##   password: chang3m3!
  ##
  ##   # Settings for roundcube database
  ##   roundcubeDatabase: roundcube
  ##   roundcubeUser: roundcube
  ##   roundcubePassword: chang3m3!
  ##
  ##   existingSecret: mail-postgresql
  postgresql: {}

## MariaDB chart configuration
## for more options see https://github.com/bitnami/charts/tree/master/bitnami/mariadb
mariadb:
  ## @param mariadb.enabled Enable MariaDB deployment
  enabled: false

  ## @param mariadb.architecture MariaDB architecture. Allowed values: standalone or replication
  architecture: standalone

  ## @param mariadb.auth.rootPassword Password for the `root` user. Ignored if existing secret is provided.
  ## @param mariadb.auth.database Name for a custom database to create
  ## @param mariadb.auth.username Name for a custom user to create
  ## @param mariadb.auth.password Password for the new user. Ignored if existing secret is provided
  ## @param mariadb.auth.existingSecret Use existing secret for password details (`auth.rootPassword`, `auth.password`, `auth.replicationPassword`
  ## will be ignored and picked up from this secret). The secret has to contain the keys `mariadb-root-password`, `mariadb-replication-password`
  ## and `mariadb-password`
  auth:
    rootPassword: changeme
    database: mailu
    username: mailu
    password: changeme
    existingSecret: ""

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  ## @param mariadb.primary.persistence.enabled Enable persistence using PVC
  ## @param mariadb.primary.persistence.storageClass PVC Storage Class for MariaDB volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ## @param mariadb.primary.persistence.accessMode PVC Access Mode for MariaDB volume
  ## @param mariadb.primary.persistence.size PVC Storage Request for MariaDB volume
  primary:
    persistence:
      enabled: false
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 8Gi

## PostgreSQL chart configuration
## for more options see https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  ## @param postgresql.enabled Enable PostgreSQL deployment
  enabled: false

  ## @param postgresql.architecture PostgreSQL architecture. Allowed values: standalone or replication
  architecture: standalone

  ## @param postgresql.auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
  ## @param postgresql.auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` with key `postgres-password` is provided
  ## @param postgresql.auth.username Name for a custom user to create
  ## @param postgresql.auth.password Password for the custom user to create. Ignored if `auth.existingSecret` with key `password` is provided
  ## @param postgresql.auth.database Name for a custom database to create
  ## @param postgresql.auth.existingSecret Use existing secret for password details (`auth.postgresPassword`, `auth.password` will be ignored and picked up from this secret). The secret has to contain the keys `postgres-password` and `password`
  auth:
    enablePostgresUser: true
    postgresPassword: changeme
    username: mailu
    password: changeme
    database: mailu
    existingSecret: ""

    ## @param postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
    ## @param postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
    ## @param postgresql.auth.secretKeys.replicationPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
      replicationPasswordKey: replication-password

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  ## @param postgresql.primary.persistence.enabled Enable persistence using PVC
  ## @param postgresql.primary.persistence.storageClass PVC Storage Class for PostgreSQL volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ## @param postgresql.primary.persistence.accessMode PVC Access Mode for PostgreSQL volume
  ## @param postgresql.primary.persistence.size PVC Storage Request for PostgreSQL volume
  primary:
    persistence:
      enabled: false
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 8Gi

## @param persistence.single_pvc Setings for a single volume for all apps.
## Set single_pvc: false to use a per app volume and set the properties in <app>.persistence (ex. admin.persistence)
## @param persistence.size Size of the persistent volume claim (for single PVC)
## @param persistence.storageClass Storage class of backing PVC (for single PVC)
## @param persistence.accessMode Access mode of backing PVC (for single PVC)
persistence:
  single_pvc: true
  size: 100Gi
  accessMode: ReadWriteOnce
  # annotations:
  #   "helm.sh/resource-policy": keep
  # hostPath: /path/on/the/host
  # existingClaim: name-of-existing.claim
  storageClass: ""
  # claimNameOverride: my-claim-name

## @section Ingress settings

## Certmanager settings
## @param certmanager.enabled Enable certmanager (create certificates for all domains)
## @param certmanager.issuerType Issuer to use for certificates
## @param certmanager.issuerName Name of the issuer to use
## @param certmanager.apiVersion Name of the secret to use for certificates
certmanager:
  enabled: true
  issuerType: ClusterIssuer
  issuerName: letsencrypt
  apiVersion: cert-manager.io/v1

## Set ingress and loadbalancer config
## @param ingress.externalIngress Enable external ingress
## @param ingress.ingressClassName Set the ingress class name for external ingress
## @param ingress.annotations Annotations to add to the external ingress
## @param ingress.realIpHeader Sets the value of `REAL_IP_HEADER` environment variable in the `front` pod
## @param ingress.realIpFrom Sets the value of `REAL_IP_FROM` environment variable in the `front` pod
## @param ingress.tlsFlavor Sets the value of `TLS_FLAVOR` environment variable in the `front` pod
ingress:
  externalIngress: true
  ingressClassName: ""
  annotations:
    # nginx.ingress.kubernetes.io/proxy-body-size: "0"
  realIpHeader: X-Forwarded-For
  realIpFrom: 0.0.0.0/0
  tlsFlavor: cert

## @section Frontend load balancer for non-HTTP(s) services
front:
  ## @param front.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param front.image.repository Pod image repository
  ## @param front.image.tag Pod image tag (defaults to mailuVersion)
  ## @param front.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/nginx
    tag: ""
    pullPolicy: IfNotPresent

  ## @param front.controller.kind Deployment or DaemonSet
  controller:
    kind: Deployment

  ## @param front.hostPort.enabled Expose front mail ports via hostPort
  hostPort:
    enabled: true

  ## Expose front mail ports via external service (ClusterIP or LoadBalancer)
  ## @param front.externalService.enabled Expose front mail ports via external service (ClusterIP or LoadBalancer)
  ## @param front.externalService.type Service type (ClusterIP or LoadBalancer)
  ## @param front.externalService.externalTrafficPolicy Service externalTrafficPolicy (Cluster or Local)
  ## @param front.externalService.annotations Service annotations
  ## @param front.externalService.pop3 Expose POP3 port
  ## @param front.externalService.pop3s Expose POP3 port (TLS)
  ## @param front.externalService.imap Expose IMAP port
  ## @param front.externalService.imaps Expose IMAP port (TLS)
  ## @param front.externalService.smtp Expose SMTP port
  ## @param front.externalService.smtps Expose SMTP port (TLS)
  ## @param front.externalService.submission Expose Submission port

  externalService:
    enabled: false
    type: ClusterIP
    ## Example for LoadBalancer:
    ## type: LoadBalancer
    ## loadBalancerIP:
    externalTrafficPolicy: Local
    annotations: {}
    pop3: false
    pop3s: true
    imap: false
    imaps: true
    smtp: true
    smtps: true
    submission: true

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param front.resources.limits The resources limits for the container
  ## @param front.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 200Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 25m
    ##    memory: 100Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param front.livenessProbe.enabled Enable livenessProbe
  ## @param front.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param front.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param front.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param front.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param front.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param front.readinessProbe.enabled Enable readinessProbe
  ## @param front.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param front.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param front.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param front.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param front.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param front.startupProbe.enabled Enable startupProbe
  ## @param front.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param front.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param front.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param front.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param front.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 30
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  ## @param front.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param front.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param front.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param front.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param front.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param front.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param front.affinity Affinity for front pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param front.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param front.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param front.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param front.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param front.service.annotations Admin service annotations
    annotations: {}

  ## @param front.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param front.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param front.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param front.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param front.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param front.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section Admin parameters
admin:
  ## @param admin.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param admin.image.repository Pod image repository
  ## @param admin.image.tag Pod image tag (defaults to mailuVersion)
  ## @param admin.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/admin
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param admin.persistence.size Pod pvc size
  ## @param admin.persistence.storageClass Pod pvc storage class
  ## @param admin.persistence.accessModes Pod pvc access modes
  ## @param admin.persistence.claimNameOverride Pod pvc name override
  ## @param admin.persistence.annotations Pod pvc annotations
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param admin.resources.limits The resources limits for the container
  ## @param admin.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 500m
    ##    memory: 500Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 25m
    ##    memory: 25Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param admin.livenessProbe.enabled Enable livenessProbe
  ## @param admin.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param admin.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param admin.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param admin.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param admin.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param admin.readinessProbe.enabled Enable readinessProbe
  ## @param admin.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param admin.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param admin.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param admin.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param admin.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param admin.startupProbe.enabled Enable startupProbe
  ## @param admin.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param admin.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param admin.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param admin.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param admin.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param admin.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param admin.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param admin.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param admin.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param admin.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param admin.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param admin.affinity Affinity for admin pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param admin.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param admin.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param admin.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param admin.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param admin.service.annotations Admin service annotations
    annotations: {}

  ## @param admin.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param admin.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param admin.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param admin.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param admin.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param admin.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section Redis parameters
redis:
  ## @param redis.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param redis.image.repository Pod image repository
  ## @param redis.image.tag Pod image tag
  ## @param redis.image.pullPolicy Pod image pull policy
  image:
    repository: redis
    tag: 5-alpine
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param redis.persistence.size Pod pvc size
  ## @param redis.persistence.storageClass Pod pvc storage class
  ## @param redis.persistence.accessModes Pod pvc access modes
  ## @param redis.persistence.claimNameOverride Pod pvc name override
  ## @param redis.persistence.annotations Pod pvc annotations
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param redis.resources.limits The resources limits for the container
  ## @param redis.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 300Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 200Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param redis.livenessProbe.enabled Enable livenessProbe
  ## @param redis.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param redis.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param redis.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param redis.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param redis.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param redis.readinessProbe.enabled Enable readinessProbe
  ## @param redis.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param redis.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param redis.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param redis.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param redis.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param redis.startupProbe.enabled Enable startupProbe
  ## @param redis.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param redis.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param redis.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param redis.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param redis.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param redis.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param redis.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param redis.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param redis.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param redis.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param redis.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param redis.affinity Affinity for redis pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param redis.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param redis.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param redis.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param redis.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param redis.service.annotations Admin service annotations
    annotations: {}

  ## @param redis.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param redis.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param redis.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param redis.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param redis.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param redis.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section Postfix parameters
postfix:
  ## @param postfix.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param postfix.image.repository Pod image repository
  ## @param postfix.image.tag Pod image tag (defaults to mailuVersion)
  ## @param postfix.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/postfix
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param postfix.persistence.size Pod pvc size
  ## @param postfix.persistence.storageClass Pod pvc storage class
  ## @param postfix.persistence.accessModes Pod pvc access modes
  ## @param postfix.persistence.claimNameOverride Pod pvc name override
  ## @param postfix.persistence.annotations Pod pvc annotations
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param postfix.resources.limits The resources limits for the container
  ## @param postfix.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 500m
    ##    memory: 2Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 500m
    ##    memory: 2Gi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param postfix.livenessProbe.enabled Enable livenessProbe
  ## @param postfix.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param postfix.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param postfix.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param postfix.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param postfix.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param postfix.readinessProbe.enabled Enable readinessProbe
  ## @param postfix.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param postfix.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param postfix.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param postfix.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param postfix.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param postfix.startupProbe.enabled Enable startupProbe
  ## @param postfix.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param postfix.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param postfix.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param postfix.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param postfix.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param postfix.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param postfix.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param postfix.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param postfix.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param postfix.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param postfix.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param postfix.affinity Affinity for postfix pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param postfix.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param postfix.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param postfix.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param postfix.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param postfix.service.annotations Admin service annotations
    annotations: {}

  ## @param postfix.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param postfix.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param postfix.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param postfix.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param postfix.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param postfix.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section Dovecot parameters
dovecot:
  ## @param dovecot.enabled Enable dovecot
  enabled: true

  ## @param dovecot.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param dovecot.image.repository Pod image repository
  ## @param dovecot.image.tag Pod image tag (defaults to mailuVersion)
  ## @param dovecot.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/dovecot
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param dovecot.persistence.size Pod pvc size
  ## @param dovecot.persistence.storageClass Pod pvc storage class
  ## @param dovecot.persistence.accessModes Pod pvc access modes
  ## @param dovecot.persistence.claimNameOverride Pod pvc name override
  ## @param dovecot.persistence.annotations Pod pvc annotations
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param dovecot.resources.limits The resources limits for the container
  ## @param dovecot.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 500m
    ##    memory: 500Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 25m
    ##    memory: 25Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param dovecot.livenessProbe.enabled Enable livenessProbe
  ## @param dovecot.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param dovecot.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param dovecot.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param dovecot.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param dovecot.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param dovecot.readinessProbe.enabled Enable readinessProbe
  ## @param dovecot.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param dovecot.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param dovecot.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param dovecot.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param dovecot.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param dovecot.startupProbe.enabled Enable startupProbe
  ## @param dovecot.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param dovecot.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param dovecot.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param dovecot.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param dovecot.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param dovecot.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param dovecot.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param dovecot.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param dovecot.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param dovecot.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param dovecot.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param dovecot.affinity Affinity for dovecot pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param dovecot.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param dovecot.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param dovecot.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param dovecot.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param dovecot.service.annotations Admin service annotations
    annotations: {}

  ## @param dovecot.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param dovecot.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param dovecot.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param dovecot.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param dovecot.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param dovecot.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

  ## @param dovecot.overrides Enable dovecot overrides
  ## Example:
  ## overrides:
  ##   dovecot.conf: |
  ##     # More info here: https://mailu.io/1.8/kubernetes/mailu/index.html#dovecot
  ##     mail_nfs_index = yes
  ##     mail_nfs_storage = yes
  ##     mail_fsync = always
  ##     mmap_disable = yes
  ##     mail_max_userip_connections=100
  overrides: {}

## historically rspamd and clamav shared their volumes in this chart
## this isn't needed anymore. to maintain backward compatibility and give users
## some time to migrate we keep this here.
##
## if you want a "shared" volume keep in mind you have to use affinity rules on
## rspamd and clamav pods so that both pods are scheduled on the same node
## to keep RWO volumes working
##
## otherwise set rspamd_clamav_persistence.single_pvc to true and review
## rspamd.persistence and clamav.persistence
## @param rspamd_clamav_persistence.size Size of the volume
## @param rspamd_clamav_persistence.storageClass Storage class of the volume
## @param rspamd_clamav_persistence.accessMode Access mode of the volume
## @param rspamd_clamav_persistence.claimNameOverride Override the name of the PVC
## @param rspamd_clamav_persistence.single_pvc Use a single PVC for rspamd and clamav
## @param rspamd_clamav_persistence.annotations Annotations for the PVC
rspamd_clamav_persistence:
  size: 20Gi
  storageClass: ""
  accessMode: ReadWriteOnce
  claimNameOverride: ""
  single_pvc: false
  annotations: {}
  #  "helm.sh/resource-policy": keep

## @section rspamd parameters
rspamd:
  ## @param rspamd.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param rspamd.image.repository Pod image repository
  ## @param rspamd.image.tag Pod image tag (defaults to mailuVersion)
  ## @param rspamd.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/rspamd
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param rspamd.persistence.size Pod pvc size
  ## @param rspamd.persistence.storageClass Pod pvc storage class
  ## @param rspamd.persistence.accessModes Pod pvc access modes
  ## @param rspamd.persistence.claimNameOverride Pod pvc name override
  ## @param rspamd.persistence.annotations Pod pvc annotations
  persistence:
    size: 1Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param rspamd.resources.limits The resources limits for the container
  ## @param rspamd.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 200Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 100Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param rspamd.livenessProbe.enabled Enable livenessProbe
  ## @param rspamd.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param rspamd.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param rspamd.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param rspamd.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param rspamd.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param rspamd.readinessProbe.enabled Enable readinessProbe
  ## @param rspamd.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param rspamd.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param rspamd.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param rspamd.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param rspamd.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## give it 15 minutes for initial rule compilation
  ## @param rspamd.startupProbe.enabled Enable startupProbe
  ## @param rspamd.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param rspamd.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param rspamd.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param rspamd.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param rspamd.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 90
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  ## @param rspamd.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param rspamd.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param rspamd.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param rspamd.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param rspamd.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param rspamd.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param rspamd.affinity Affinity for rspamd pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param rspamd.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param rspamd.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param rspamd.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param rspamd.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param rspamd.service.annotations Admin service annotations
    annotations: {}

  ## @param rspamd.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param rspamd.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param rspamd.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param rspamd.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param rspamd.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param rspamd.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section clamav parameters
clamav:
  ## @param clamav.enabled Enable ClamAV
  enabled: true

  ## @param clamav.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param clamav.image.repository Pod image repository
  ## @param clamav.image.tag Pod image tag (defaults to mailuVersion)
  ## @param clamav.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/clamav
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param clamav.persistence.size Pod pvc size
  ## @param clamav.persistence.storageClass Pod pvc storage class
  ## @param clamav.persistence.accessModes Pod pvc access modes
  ## @param clamav.persistence.claimNameOverride Pod pvc name override
  ## @param clamav.persistence.annotations Pod pvc annotations
  persistence:
    size: 2Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param clamav.resources.limits The resources limits for the container
  ## @param clamav.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 1
    ##    memory: 2Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 1
    ##    memory: 1Gi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param clamav.livenessProbe.enabled Enable livenessProbe
  ## @param clamav.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param clamav.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param clamav.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param clamav.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param clamav.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param clamav.readinessProbe.enabled Enable readinessProbe
  ## @param clamav.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param clamav.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param clamav.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param clamav.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param clamav.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## give it 15 minutes for initial rule compilation
  ## @param clamav.startupProbe.enabled Enable startupProbe
  ## @param clamav.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param clamav.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param clamav.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param clamav.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param clamav.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 60
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5

  ## @param clamav.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param clamav.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param clamav.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param clamav.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param clamav.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param clamav.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param clamav.affinity Affinity for clamav pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## clamav must share a volume with rspamd. This is usually enforced by the volume itself (RWO). If you use RWM volumes and want to
  ## have clamav running on the same node, add the following affinity rule:
  ##  affinity:
  ##    podAffinity:
  ##      requiredDuringSchedulingIgnoredDuringExecution:
  ##        - labelSelector:
  ##            matchExpressions:
  ##              - key: app.kubernetes.io/component
  ##                operator: In
  ##                values:
  ##                  - rspamd
  ##          topologyKey: kubernetes.io/hostname
  affinity: {}

  ## @param clamav.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param clamav.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param clamav.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param clamav.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param clamav.service.annotations Admin service annotations
    annotations: {}

  ## @param clamav.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param clamav.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param clamav.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param clamav.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param clamav.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param clamav.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section roundcube parameters
roundcube:
  ## @param roundcube.enabled Enable deployment of Roundcube webmail
  enabled: true

  ## @param roundcube.uri URI to access Roundcube webmail
  uri: /roundcube

  ## @param roundcube.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param roundcube.image.repository Pod image repository
  ## @param roundcube.image.tag Pod image tag (defaults to mailuVersion)
  ## @param roundcube.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/roundcube
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param roundcube.persistence.size Pod pvc size
  ## @param roundcube.persistence.storageClass Pod pvc storage class
  ## @param roundcube.persistence.accessModes Pod pvc access modes
  ## @param roundcube.persistence.claimNameOverride Pod pvc name override
  ## @param roundcube.persistence.annotations Pod pvc annotations
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param roundcube.resources.limits The resources limits for the container
  ## @param roundcube.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 200Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 100Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param roundcube.livenessProbe.enabled Enable livenessProbe
  ## @param roundcube.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param roundcube.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param roundcube.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param roundcube.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param roundcube.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param roundcube.readinessProbe.enabled Enable readinessProbe
  ## @param roundcube.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param roundcube.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param roundcube.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param roundcube.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param roundcube.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param roundcube.startupProbe.enabled Enable startupProbe
  ## @param roundcube.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param roundcube.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param roundcube.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param roundcube.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param roundcube.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param roundcube.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param roundcube.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param roundcube.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param roundcube.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param roundcube.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param roundcube.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param roundcube.affinity Affinity for roundcube pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param roundcube.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param roundcube.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param roundcube.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param roundcube.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param roundcube.service.annotations Admin service annotations
    annotations: {}

  ## @param roundcube.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param roundcube.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param roundcube.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param roundcube.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param roundcube.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param roundcube.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section webdav parameters
webdav:
  ## @param webdav.enabled Enable deployment of WebDAV server (using Radicale)
  enabled: false

  ## @param webdav.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param webdav.image.repository Pod image repository
  ## @param webdav.image.tag Pod image tag (defaults to mailuVersion)
  ## @param webdav.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/radicale
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param webdav.persistence.size Pod pvc size
  ## @param webdav.persistence.storageClass Pod pvc storage class
  ## @param webdav.persistence.accessModes Pod pvc access modes
  ## @param webdav.persistence.claimNameOverride Pod pvc name override
  ## @param webdav.persistence.annotations Pod pvc annotations
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param webdav.resources.limits The resources limits for the container
  ## @param webdav.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 500m
    ##    memory: 500Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 25m
    ##    memory: 25Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param webdav.livenessProbe.enabled Enable livenessProbe
  ## @param webdav.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param webdav.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param webdav.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param webdav.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param webdav.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param webdav.readinessProbe.enabled Enable readinessProbe
  ## @param webdav.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param webdav.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param webdav.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param webdav.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param webdav.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param webdav.startupProbe.enabled Enable startupProbe
  ## @param webdav.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param webdav.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param webdav.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param webdav.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param webdav.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param webdav.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param webdav.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param webdav.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param webdav.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param webdav.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param webdav.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param webdav.affinity Affinity for webdav pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param webdav.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param webdav.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param webdav.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param webdav.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param webdav.service.annotations Admin service annotations
    annotations: {}

  ## @param webdav.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param webdav.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param webdav.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param webdav.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param webdav.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param webdav.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []

## @section fetchmail parameters
fetchmail:
  ## @param fetchmail.enabled Enable deployment of fetchmail
  enabled: false

  ## @param fetchmail.delay Delay between fetchmail runs
  delay: 600

  ## @param fetchmail.logLevel Override default log level
  logLevel: ""

  ## Pod image
  ## @param fetchmail.image.repository Pod image repository
  ## @param fetchmail.image.tag Pod image tag (defaults to mailuVersion)
  ## @param fetchmail.image.pullPolicy Pod image pull policy
  image:
    repository: mailu/fetchmail
    tag: ""
    pullPolicy: IfNotPresent

  ## Pod persistence (if not using single_pvc)
  ## @param fetchmail.persistence.size Pod pvc size
  ## @param fetchmail.persistence.storageClass Pod pvc storage class
  ## @param fetchmail.persistence.accessModes Pod pvc access modes
  ## @param fetchmail.persistence.claimNameOverride Pod pvc name override
  ## @param fetchmail.persistence.annotations Pod pvc annotations
  persistence:
    size: 20Gi
    storageClass: ""
    accessModes: [ReadWriteOnce]
    claimNameOverride: ""
    annotations: {}

  ## Pod resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param fetchmail.resources.limits The resources limits for the container
  ## @param fetchmail.resources.requests The requested resources for the container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 200Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 100Mi
    requests: {}

  ## Liveness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param fetchmail.livenessProbe.enabled Enable livenessProbe
  ## @param fetchmail.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param fetchmail.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param fetchmail.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param fetchmail.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param fetchmail.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  livenessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Readiness probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param fetchmail.readinessProbe.enabled Enable readinessProbe
  ## @param fetchmail.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param fetchmail.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param fetchmail.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param fetchmail.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param fetchmail.readinessProbe.successThreshold Success threshold for readinessProbe
  readinessProbe:
    enabled: true
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## Startup probe values
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param fetchmail.startupProbe.enabled Enable startupProbe
  ## @param fetchmail.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param fetchmail.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param fetchmail.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param fetchmail.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param fetchmail.startupProbe.successThreshold Success threshold for startupProbe
  startupProbe:
    enabled: false
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ## @param fetchmail.podLabels Add extra labels to pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  ## @param fetchmail.podAnnotations Add extra annotations to the pod
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ## @param fetchmail.nodeSelector Node labels selector for pod assignment
  nodeSelector: {}

  ## @param fetchmail.initContainers Add additional init containers to the pod
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  initContainers: []

  ## @param fetchmail.priorityClassName Pods' priorityClassName
  priorityClassName: ""

  ## @param fetchmail.terminationGracePeriodSeconds In seconds, time given to the pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  terminationGracePeriodSeconds: 2

  ## @param fetchmail.affinity Affinity for fetchmail pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## @param fetchmail.tolerations Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## @param fetchmail.revisionHistoryLimit Configure the revisionHistoryLimit of the deployment
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#revision-history-limit
  revisionHistoryLimit: 3

  ## @param fetchmail.hostAliases Pod pod host aliases
  ## ref: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  hostAliases: []

  ## @param fetchmail.schedulerName Name of the k8s scheduler (other than default)
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  schedulerName: ""

  # Service parameters
  service:
    ## @param fetchmail.service.annotations Admin service annotations
    annotations: {}

  ## @param fetchmail.topologySpreadConstraints Topology Spread Constraints for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints: []

  ## Strategy to use to update Pods
  ## @param fetchmail.updateStrategy.type Can be set to RollingUpdate or OnDelete
  updateStrategy:
    type: RollingUpdate

  ## @param fetchmail.extraEnvVars Extra environment variable to pass to the running container
  ## For example:
  ## extraEnvVars:
  ##  - name: MY_ENV_VAR
  ##    value: env_var_value
  extraEnvVars: []

  ## @param fetchmail.extraEnvVarsCM Name of existing ConfigMap containing extra environment variables to mount in the pod
  extraEnvVarsCM: ""

  ## @param fetchmail.extraEnvVarsSecret Name of existing Secret containing extra environment variables to mount in the pod
  extraEnvVarsSecret: ""

  ## @param fetchmail.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the pod
  extraVolumeMounts: []
